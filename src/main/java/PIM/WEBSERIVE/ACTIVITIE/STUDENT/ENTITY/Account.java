package PIM.WEBSERIVE.ACTIVITIE.STUDENT.ENTITY;
// default package

// Generated 14 �.�. 2561, 12:11:19 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account", catalog = "pim_activitie_student", uniqueConstraints = @UniqueConstraint(columnNames = "account_username"))
public class Account implements java.io.Serializable {

	private Integer accountId;
	private Accounttype accounttype;
	private Person person;
	@JsonIgnore
	private String accountUsername;
	@JsonIgnore
	private String accountPassword;
	@JsonIgnore
	private Date accountCreateDate;
	@JsonIgnore
	private Set<AccountHasActivitie> accountHasActivities = new HashSet<AccountHasActivitie>(0);
	@JsonIgnore
	private Set<Recordactivitie> recordactivities = new HashSet<Recordactivitie>(0);

	public Account() {
	}

	public Account(Accounttype accounttype, Person person, String accountUsername, String accountPassword,
			Date accountCreateDate) {
		this.accounttype = accounttype;
		this.person = person;
		this.accountUsername = accountUsername;
		this.accountPassword = accountPassword;
		this.accountCreateDate = accountCreateDate;
	}

	public Account(Accounttype accounttype, Person person, String accountUsername, String accountPassword,
			Date accountCreateDate, Set<AccountHasActivitie> accountHasActivities,
			Set<Recordactivitie> recordactivities) {
		this.accounttype = accounttype;
		this.person = person;
		this.accountUsername = accountUsername;
		this.accountPassword = accountPassword;
		this.accountCreateDate = accountCreateDate;
		this.accountHasActivities = accountHasActivities;
		this.recordactivities = recordactivities;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "account_id", unique = true, nullable = false)
	public Integer getAccountId() {
		return this.accountId;
	}

	public void setAccountId(Integer accountId) {
		this.accountId = accountId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "accounttype_id", nullable = false)
	public Accounttype getAccounttype() {
		return this.accounttype;
	}

	public void setAccounttype(Accounttype accounttype) {
		this.accounttype = accounttype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "person_id", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@Column(name = "account_username", unique = true, nullable = false, length = 50)
	public String getAccountUsername() {
		return this.accountUsername;
	}

	public void setAccountUsername(String accountUsername) {
		this.accountUsername = accountUsername;
	}

	@Column(name = "account_password", nullable = false, length = 50)
	public String getAccountPassword() {
		return this.accountPassword;
	}

	public void setAccountPassword(String accountPassword) {
		this.accountPassword = accountPassword;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "account_create_date", length = 19)
	public Date getAccountCreateDate() {
		return this.accountCreateDate;
	}

	public void setAccountCreateDate(Date accountCreateDate) {
		this.accountCreateDate = accountCreateDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<AccountHasActivitie> getAccountHasActivities() {
		return this.accountHasActivities;
	}

	public void setAccountHasActivities(Set<AccountHasActivitie> accountHasActivities) {
		this.accountHasActivities = accountHasActivities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Recordactivitie> getRecordactivities() {
		return this.recordactivities;
	}

	public void setRecordactivities(Set<Recordactivitie> recordactivities) {
		this.recordactivities = recordactivities;
	}

	@Override
	public String toString() {
		return "Account [accountId=" + accountId + ", accounttypeName=" + accounttype.getAccounttypeName()
				+ ", personName=" + person.getPersonNameFirst() + " " + person.getPersonNameLast() + ", major="
				+ person.getMajor().getMajorName() + ", accountUsername=" + accountUsername + ", accountPassword="
				+ accountPassword + ", accountCreateDate=" + accountCreateDate + "]";
	}

}
