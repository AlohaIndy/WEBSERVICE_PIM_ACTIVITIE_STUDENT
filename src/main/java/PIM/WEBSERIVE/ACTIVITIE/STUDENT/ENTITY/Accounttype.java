package PIM.WEBSERIVE.ACTIVITIE.STUDENT.ENTITY;
// Generated 11 �.�. 2561, 22:50:09 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Accounttype generated by hbm2java
 */
@Entity
@Table(name = "accounttype", catalog = "pim_activitie_student")
public class Accounttype implements java.io.Serializable {

	private Integer accounttypeId;
	private String accounttypeName;
	@JsonIgnore
	private Date accounttypeCreateDate;
	@JsonIgnore
	private Set<Account> accounts = new HashSet<Account>(0);

	public Accounttype() {
	}

	public Accounttype(String accounttypeName) {
		this.accounttypeName = accounttypeName;
	}

	public Accounttype(String accounttypeName, Date accounttypeCreateDate, Set<Account> accounts) {
		this.accounttypeName = accounttypeName;
		this.accounttypeCreateDate = accounttypeCreateDate;
		this.accounts = accounts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "accounttype_id", unique = true, nullable = false)
	public Integer getAccounttypeId() {
		return this.accounttypeId;
	}

	public void setAccounttypeId(Integer accounttypeId) {
		this.accounttypeId = accounttypeId;
	}

	@Column(name = "accounttype_name", nullable = false, length = 50)
	public String getAccounttypeName() {
		return this.accounttypeName;
	}

	public void setAccounttypeName(String accounttypeName) {
		this.accounttypeName = accounttypeName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "accounttype_create_date", length = 19)
	public Date getAccounttypeCreateDate() {
		return this.accounttypeCreateDate;
	}

	public void setAccounttypeCreateDate(Date accounttypeCreateDate) {
		this.accounttypeCreateDate = accounttypeCreateDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accounttype")
	public Set<Account> getAccounts() {
		return this.accounts;
	}

	public void setAccounts(Set<Account> accounts) {
		this.accounts = accounts;
	}

}
